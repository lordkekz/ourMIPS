<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:ourMIPSSharp_App.ViewModels"
             xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
             xmlns:avaloniaEdit="https://github.com/avaloniaui/avaloniaedit"
             xmlns:views="clr-namespace:ourMIPSSharp_App.Views"
             xmlns:converters="clr-namespace:ourMIPSSharp_App.Converters"
             xmlns:dialogHost="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
             xmlns:tools="clr-namespace:ourMIPSSharp_App.Views.Tools"
             xmlns:editor="clr-namespace:ourMIPSSharp_App.Views.Editor"
             xmlns:controls="clr-namespace:Dock.Model.ReactiveUI.Controls;assembly=Dock.Model.ReactiveUI"
             xmlns:reactiveUi="clr-namespace:Dock.Model.ReactiveUI;assembly=Dock.Model.ReactiveUI"
             mc:Ignorable="d" d:DesignWidth="1400" d:DesignHeight="450"
             x:Class="ourMIPSSharp_App.Views.MainView">
    <UserControl.Styles>
        <Style Selector="Border.OverlayBorder">
            <Setter Property="Opacity" Value="0" />
            <Setter Property="RenderTransform" Value="scale(.9)" />
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Property="Opacity" Duration="0:0:.1" />
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.1" />
                </Transitions>
            </Setter>
            <Style.Animations>
                <Animation Duration="0:0:.1"
                           Delay="0:0:.1">
                    <KeyFrame Cue="100%">
                        <Setter Property="IsVisible" Value="False" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Border.OverlayBorder[Tag=True]">
            <Setter Property="Opacity" Value="1" />
            <Setter Property="RenderTransform" Value="scale(1)" />
            <Setter Property="IsVisible" Value="True" />
        </Style>
    </UserControl.Styles>
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <viewModels:MainViewModel />
    </Design.DataContext>
    <dialogHost:DialogHost Name="MainDialogHost">
        <dialogHost:DialogHost.DataTemplates>
            <DataTemplate DataType="viewModels:ModalDialogViewModel">
                <Grid RowDefinitions="*, 8, Auto" ColumnDefinitions="Auto, 8, Auto">
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                               Text="{Binding Text}" />
                    <Button Grid.Row="2" Grid.Column="0"
                            Content="{Binding CancelButtonContent}"
                            Command="{Binding RelativeSource={RelativeSource FindAncestor,
                            AncestorType=dialogHost:DialogHost}, Path=CloseDialogCommand}">
                        <Button.CommandParameter>
                            <x:Boolean>False</x:Boolean>
                        </Button.CommandParameter>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="2" Classes="PrimaryBtn"
                            Content="{Binding AcceptButtonContent}"
                            Command="{Binding RelativeSource={RelativeSource FindAncestor,
                            AncestorType=dialogHost:DialogHost}, Path=CloseDialogCommand}">
                        <Button.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </Grid>
            </DataTemplate>
        </dialogHost:DialogHost.DataTemplates>
        <Grid Background="{DynamicResource SystemChromeBlackMediumColor}" RowDefinitions="*, Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MinWidth="200" />
            </Grid.ColumnDefinitions>
            <tools:CommandBarView Grid.Column="0" Grid.RowSpan="1" DataContext="{Binding Commands}" />
            <!--<ContentControl Grid.Row="0" Grid.Column="1" Content="{Binding Registers}" />-->
            <DockControl x:Name="DockControl" Layout="{Binding Layout}" Margin="4"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         Grid.Row="0" Grid.Column="1" />
            <views:StatusBarView Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />
            <Border Grid.Row="0" Grid.Column="1"
                    Classes="OverlayBorder" Tag="{Binding IsSettingsOpened}"
                    Background="{DynamicResource SystemChromeBlackHighColor}"
                    ZIndex="2">
                <views:SettingsView DataContext="{Binding Settings}" />
            </Border>
            <Border Grid.Row="0" Grid.Column="1"
                    Classes="OverlayBorder" Tag="{Binding IsMemoryInitOpened}"
                    Background="{DynamicResource SystemChromeBlackHighColor}"
                    ZIndex="2">
                <views:MemoryInitView DataContext="{Binding MemoryInit}" />
            </Border>
        </Grid>
    </dialogHost:DialogHost>
</UserControl>